---
  # Site.yml to manage the ServerDelivery Playbook.

- hosts: all
  remote_user: root
  vars_files:
    - group_vars/main.yml
    - group_vars/passes.yml
    - group_vars/{{ ansible_os_family }}.yml

  tasks:

    - include: RedHat.yml
      when: ansible_os_family == "RedHat"

    - include: Debian.yml
      when: ansible_os_family == "Debian"

    - name: adding users to servers
      user:
        name: "{{ item }}"
        comment: "{{ item }} sudo account"
        shell: /bin/bash
        generate_ssh_key: yes
        ssh_key_file: .ssh/id_rsa
        ssh_key_bits: 4096
        ssh_key_type: rsa
        ssh_key_comment: "{{ item }}@{{ ansible_hostname }}"
        ssh_key_passphrase: "{{ users_ssh_key_pass }}"
      with_items: "{{ delivered_users }}"

    - name: add users ssh public keys
      copy:
        src: files/{{ item }}_id_rsa.pub
        dest: /home/{{ item }}/.ssh/authorized_keys
        owner: "{{ item }}"
        group: "{{ item }}"
        mode: 0600
      with_items: "{{ delivered_users }}"

    - name: add admin group
      group:
        name: admin
        state: present

    - name: add users to admin group
      user:
        name: "{{ item }}"
        groups: admin
        append: yes
      with_items: "{{ delivered_users }}"

    - name: add users sudoers file
      copy:
        backup: no
        src: files/sudoers_file
        dest: /etc/sudoers.d/{{ item }}
        owner: root
        group: root
        mode: 0440
      with_items: "{{ delivered_users }}"

    - name: secure SSH with a sane sshd_config
      template:
        backup: yes
        src: templates/{{ sshd_config }}
        dest: /etc/ssh/sshd_config
        owner: root
        group: root
        mode: 0600

    - name: restarting sshd
      service:
        name: "{{ sshd_daemon }}"
        state: restarted
        enabled: yes
