---
  # Site.yml to manage the ServerDelivery Playbook.

- hosts: all
  remote_user: root
  vars_files:
    - group_vars/main.yml
    - group_vars/passes.yml


  tasks:
    - name: update all YUM packages to latest
      yum:
        name: "*"
        state: latest
        update_cache: yes
      when: ansible_os_family == "RedHat"

      tags:
        - redhat
        - update

    - name: update all Apt packages to latest
      apt:
        name: "*"
        state: latest
        update_cache: yes
      when: ansible_os_family == "Debian"

      tags:
        - debian
        - update

    - name: adding users to servers
      user:
        name: "{{ item }}"
        comment: "{{ item }} sudo account"
        shell: /bin/bash
        generate_ssh_key: yes
        ssh_key_file: .ssh/id_rsa
        ssh_key_bits: 4096
        ssh_key_type: rsa
        ssh_key_comment: "{{ item }}@{{ ansible_hostname }}"
        ssh_key_passphrase: "{{ users_ssh_key_pass }}"
      with_items: "{{ delivered_users }}"

    - name: add users to sudo
      template:
        backup: yes
        src: templates/redhat_sudoers.j2
        dest: /etc/sudoers
        owner: root
        group: root
        mode: 0600
      when: ansible_os_family == "RedHat"

      tags:
        - users

    - name: secure SSH with a sane sshd_config on RedHat
      template:
        backup: yes
        src: templates/redhat_sshd_config.j2
        dest: /etc/ssh/sshd_config
        owner: root
        group: root
        mode: 0600
      when: ansible_os_family == "RedHat"

      tags:
        - sshd

    - name: secure SSH with a sane sshd_config on Debian
      template:
        backup: yes
        src: templates/debian_sshd_config.j2
        dest: /etc/ssh/sshd_config
        owner: root
        group: root
        mode: 0600
      when: ansible_os_family == "Debian"

      tags:
        - sshd

    - name: restart sshd with new config
      service:
        name: sshd
        state: restarted
        enabled: yes

      tags:
        - sshd
